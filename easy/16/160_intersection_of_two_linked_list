/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */

/**
 * @param {ListNode} headA
 * @param {ListNode} headB
 * @return {ListNode}
 */
var getIntersectionNode = function(headA, headB) {
  /**
   * ListA + ListB = ListB + ListA;
   * 两个指针各遍历两个链表一次，都是同步前进，遇到结尾就从另外一个链表的头部开始
   * 第二遍时两个指针会在相同的节点相遇
   */
  var pA = headA;
  var pB = headB;
  while(pA || pB){
    if(pA === pB){
      return pA
    }
    pA = pA ? pA.next : headB;
    pB = pB ? pB.next : headA;
  }
  return null;
};
